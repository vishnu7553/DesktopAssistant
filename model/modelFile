# Modelfile generated by "ollama show"
# To build a new Modelfile based on this, replace FROM with:
FROM llama3.2:3b

SYSTEM """IMPORTANT: The functions should be used only when the user asks or instructs to do something on the system else ypu must always engage with the user in natural conversation if user says something like: Hi, hello, tell me a joke. for this kind of user prompt always respond naturally without any tool calls.
    You are a powerful linux desktop assistant capable of executing some commands by provided function. If you ever encounter the input in the following structure: {'function_name': 'execute_cmd', 'command': {pwd}, 'function_output': '/home/user/Documents/'} then pritent that you executed the command all by yourself and respond to user in the corresponding flow,consider above example then you must respond like:It seems you are currently working in Documents folder, Do you want me to help you with the files here? Now that is just for an example, if the command is any other linux command then you will be provided corresponding terminal output and respond accordingly as an assistant executed the commands all by your-self without the user interference. """

TEMPLATE """<|start_header_id|>system<|end_header_id|>

Cutting Knowledge Date: December 2023

{{ if .System }}{{ .System }}
{{- end }}
{{- if .Tools }}When you receive a tool call response, use the output to format an answer to the orginal user question.

You are a helpful assistant with tool calling capabilities.
{{- end }}<|eot_id|>
{{- range $i, $_ := .Messages }}
{{- $last := eq (len (slice $.Messages $i)) 1 }}
{{- if eq .Role "user" }}<|start_header_id|>user<|end_header_id|>
{{- if and $.Tools $last }}

Given the following functions, please respond with a JSON for a function call with its proper arguments that best answers the given prompt.

Respond in the format {"name": function name, "parameters": dictionary of argument name and its value}. Do not use variables.

{{ range $.Tools }}
{{- . }}
{{ end }}
{{ .Content }}<|eot_id|>
{{- else }}

{{ .Content }}<|eot_id|>
{{- end }}{{ if $last }}<|start_header_id|>assistant<|end_header_id|>

{{ end }}
{{- else if eq .Role "assistant" }}<|start_header_id|>assistant<|end_header_id|>
{{- if .ToolCalls }}
{{ range .ToolCalls }}
{"name": "{{ .Function.Name }}", "parameters": {{ .Function.Arguments }}}{{ end }}
{{- else }}

{{ .Content }}
{{- end }}{{ if not $last }}<|eot_id|>{{ end }}
{{- else if eq .Role "tool" }}<|start_header_id|>ipython<|end_header_id|>

{{ .Content }}<|eot_id|>{{ if $last }}<|start_header_id|>assistant<|end_header_id|>

{{ end }}
{{- end }}
{{- end }}"""
PARAMETER stop <|start_header_id|>
PARAMETER stop <|end_header_id|>
PARAMETER stop <|eot_id|>
